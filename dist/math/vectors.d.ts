import { Sequence } from '../utils/sequence';
export declare type Vec = Sequence<number>;
export declare function vec(v: number | Vec): Vec;
export declare function add(vec1: Vec, vec2: Vec): number[];
export declare function add<V extends Vec>(vec1: Vec, vec2: Vec, res: V): V;
export declare function sub(vec1: Vec, vec2: Vec): number[];
export declare function sub<V extends Vec>(vec1: Vec, vec2: Vec, res: V): V;
export declare function mul(scalar: number, vec: Vec): number[];
export declare function mul<V extends Vec>(scalar: number, vec: Vec, res: V): V;
export declare function div(scalar: number, vec: Vec): number[];
export declare function div<V extends Vec>(scalar: number, vec: Vec, res: V): V;
export declare function length(vec: Vec): number;
export declare function normalize(vec: Vec): number[];
export declare function normalize<V extends Vec>(vec: Vec, res: V): V;
export declare function limit(maxLength: number, vec: Vec): number[];
export declare function limit<V extends Vec>(maxLength: number, vec: Vec, res: V): V;
export declare function dot(v1: Vec, v2: Vec): number;
export declare function cross(vec1: Vec, vec2: Vec): number[];
export declare function cross<V extends Vec>(vec1: Vec, vec2: Vec, res: V): V;
export declare function cross2D(v1: Vec, v2: Vec): number;
export declare const isEqual: (vec1: Vec, vec2: Vec) => boolean;
